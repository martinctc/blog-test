<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Martin Chan</title>
    <link>/</link>
    <description>Recent content on Martin Chan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Welcome!</title>
      <link>/post/test-post/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/test-post/</guid>
      <description>I‚Äôm Martin Chan, Consultant at Rainmakers CSI. I am part of a team based in London where we help our clients solve strategic problems and grow their businesses profitably. Examples of what we do include opportunity sizing, customer segmentation and trend identification, but the problems we work with tend to be open-ended and therefore no solution is ever off-the-shelf.
My interest is in identifying data science solutions (particularly, in R!</description>
    </item>
    
    <item>
      <title>A Short Package Review - RQDA</title>
      <link>/blog/2019-04-19-a-short-r-package-review-rqda/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019-04-19-a-short-r-package-review-rqda/</guid>
      <description>A favourite R package? Whenever I‚Äôm asked the question of what my favourite R package is, I often go through this reasoning: tidyverse packages, such as dplyr and tidyr, are what I‚Äôd call ‚Äúessentials‚Äù i.e.¬†packages that I would always load for almost every piece of analysis in R. I love tidyverse, but when we are talking about a favourite package, they do not feel quite like the right candidates. The reason is because tidyverse packages are so intrinsic to my personal routine of using R that it‚Äôs almost like saying ‚ÄúWater is my favourite drink because I can‚Äôt live without it.</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>/blog/2019-04-13-first-post/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019-04-13-first-post/</guid>
      <description>Why start a R blog? Ever since I discovered r-bloggers and had subsequently learnt immensely from the articles contributed by R users all around the world, I‚Äôve wanted to start a R blog myself. Part of the motivation is give back to the open source community. Since I myself had benefitted so much from R vignettes, blogs, and Stack Overflow discussions, it feels right that I should give something back in some form to the newcomers to R, now that I am able to code in R reasonably well.</description>
    </item>
    
    <item>
      <title>Fancy App 1</title>
      <link>/itemized/item1/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item1/</guid>
      <description> App 1 </description>
    </item>
    
    <item>
      <title>Fancy App 2</title>
      <link>/itemized/item2/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item2/</guid>
      <description> App 2 </description>
    </item>
    
    <item>
      <title>Fancy App 3</title>
      <link>/itemized/item3/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item3/</guid>
      <description> App 3 </description>
    </item>
    
    <item>
      <title>Fancy App 4</title>
      <link>/itemized/item4/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/itemized/item4/</guid>
      <description> App 4 </description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blog/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;‚ñæ &amp;lt;root&amp;gt;/
    ‚ñæ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>My favourite alternative to Excel dashboards</title>
      <link>/blog/2019-04-27-my-favourite-alternative-to-excel-dashboards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019-04-27-my-favourite-alternative-to-excel-dashboards/</guid>
      <description>Excel dashboards are great‚Ä¶ what? üòØ For all the complaints that people have for Excel, it still has many clear, indisputable advantages.
For one, it is extremely accessible - almost everyone has Excel installed on their computer. It‚Äôs familiar to most people, and practically anyone who can use a computer will know how to perform basic operations like doing a SUM function or filter a column.
In the context of sharing analysis or findings, Excel more importantly has portability.</description>
    </item>
    
    <item>
      <title>Two Styles of Learning R</title>
      <link>/blog/2019-05-06-two-styles-of-learning-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019-05-06-two-styles-of-learning-r/</guid>
      <description>What‚Äôs the best way to learn R?
 Motivations behind the debate Some argue that R fundamentally has a steep learning curve, and that there are no real shortcuts for learning R. I don‚Äôt completely agree with that: I think that there are easier ways to learn R nowadays, specifically with the availability and expansion of the tidyverse collection of packages. From my own experience, and from chatting with other people about their experiences in self-teaching R, I think that learning approaches for R (especially at the ‚Äúnewbie‚Äù stage) fall into either one of two styles: the ‚Äòanarchic‚Äô style and the ‚Äòmethodical‚Äô style.</description>
    </item>
    
    <item>
      <title>Using data.table with magrittr pipes: best of both worlds</title>
      <link>/blog/2019-04-21-using-data.table-with-magrittr-pipes-best-of-both-worlds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019-04-21-using-data.table-with-magrittr-pipes-best-of-both-worlds/</guid>
      <description>Should we use magrittr pipes with data.table?
 Why ask the question? If you are fairly new to R, you might find it puzzling / intriguing that R questions on Stack Overflow tend to attract a range of solutions which all have different syntax ‚Äústyles‚Äù, but almost all seem to be valid answers to some extent (as indicated by the number of upvotes to the solution). This is because there are three main syntax styles in the R universe:</description>
    </item>
    
    <item>
      <title>Vignette: Scraping Amazon Reviews in R</title>
      <link>/blog/2019-05-16-vignette-scraping-amazon-reviews-in-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019-05-16-vignette-scraping-amazon-reviews-in-r/</guid>
      <description>Background One of the pet projects that I was working on earlier in the year is to figure out an efficient way to gain an insight into what is going on in a consumer market, e.g.:
 What do people look for when they‚Äôre buying a product? What are the typical pain points / causes of frustration in the purchase process or in a product itself?  Amazon reviews provide an accessible yet vast data resource that does both of these things, allowing you to quickly explore what‚Äôs going on at effectively zero data collection cost.</description>
    </item>
    
  </channel>
</rss>